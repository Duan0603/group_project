<%@ page language="java" contentType="text/html;charset=UTF-8" pageEncoding="UTF-8" %>
<%-- Popup chat Gemini AI --%>
<style>
#gemini-popup-btn {
    position: fixed;
    bottom: 80px;
    right: 32px;
    z-index: 9999;
    background: #e84393;
    color: #fff;
    border: none;
    border-radius: 50%;
    width: 56px;
    height: 56px;
    font-size: 28px;
    box-shadow: 0 4px 16px rgba(0,0,0,0.2);
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
}
#gemini-popup-chat {
    position: fixed;
    bottom: 148px;
    right: 32px;
    width: 340px;
    max-width: 90vw;
    background: #232323;
    color: #fff;
    border-radius: 12px;
    box-shadow: 0 8px 32px rgba(0,0,0,0.25);
    z-index: 10000;
    display: none;
    flex-direction: column;
    overflow: hidden;
}
#gemini-popup-header {
    background: #e84393;
    padding: 12px 16px;
    font-weight: bold;
    display: flex;
    align-items: center;
    justify-content: space-between;
}
#gemini-popup-close {
    background: none;
    border: none;
    color: #fff;
    font-size: 22px;
    cursor: pointer;
}
#gemini-popup-messages {
    padding: 16px;
    height: 220px;
    overflow-y: auto;
    background: #232323;
    font-size: 15px;
}
#gemini-popup-input {
    display: flex;
    border-top: 1px solid #333;
    background: #232323;
}
#gemini-popup-textarea {
    flex: 1;
    padding: 10px;
    border: none;
    background: #232323;
    color: #fff;
    resize: none;
    font-size: 15px;
    outline: none;
}
#gemini-popup-send {
    background: #e84393;
    color: #fff;
    border: none;
    padding: 0 18px;
    font-size: 16px;
    cursor: pointer;
    border-radius: 0 0 12px 0;
}
#gemini-popup-messages span {
    color: #fff !important;
    background: #e84393 !important;
}
</style>
<%-- Kh√¥ng hi·ªÉn th·ªã popup tr√™n admin.jsp --%>
<c:if test="${pageContext.request.servletPath ne '/WEB-INF/views/admin.jsp'}">
    <button id="gemini-popup-btn" title="Tr·ª£ l√Ω AI Gemini">üí¨</button>
    <div id="gemini-popup-chat">
        <div id="gemini-popup-header">
            Gemini AI
            <button id="gemini-popup-close">&times;</button>
        </div>
        <div id="gemini-popup-messages"></div>
        <form id="gemini-popup-input" onsubmit="return sendGeminiMessage();">
            <input id="gemini-popup-textarea" type="text" placeholder="Nh·∫≠p y√™u c·∫ßu t·∫°o playlist, x√≥a playlist..." required style="flex:1;padding:10px;border:none;background:#232323;color:#fff;font-size:15px;outline:none;" />
            <button type="submit" id="gemini-popup-send">G·ª≠i</button>
        </form>
    </div>
</c:if>
<script>
    const geminiBtn = document.getElementById('gemini-popup-btn');
    const geminiChat = document.getElementById('gemini-popup-chat');
    const geminiClose = document.getElementById('gemini-popup-close');
    const geminiMessages = document.getElementById('gemini-popup-messages');
    const geminiTextarea = document.getElementById('gemini-popup-textarea');
    
    // L∆∞u l·ªãch s·ª≠ tin nh·∫Øn ƒë·ªÉ hi·ªÉn th·ªã l·∫°i khi m·ªü chat
    let geminiChatHistory = [];
    
    // H√†m n√†y ch·ªâ d√πng ƒë·ªÉ v·∫Ω l·∫°i to√†n b·ªô l·ªãch s·ª≠ khi m·ªü popup
    function renderGeminiHistory() {
        geminiMessages.innerHTML = '';
        geminiChatHistory.forEach(msg => {
            addGeminiMessage(msg.content, msg.isUser, true); // true ƒë·ªÉ kh√¥ng push l·∫°i v√†o history
        });
    }
    
    // H√†m th√™m m·ªôt tin nh·∫Øn m·ªõi v√†o giao di·ªán
    function addGeminiMessage(content, isUser, skipHistoryPush = false) {
        if (!content || typeof content !== 'string' || content.trim() === '') return null;
    
        const msgDiv = document.createElement('div');
        msgDiv.style.margin = '8px 0';
        msgDiv.style.textAlign = isUser ? 'right' : 'left';
    
        const msgSpan = document.createElement('span');
        msgSpan.style.padding = '6px 12px';
        msgSpan.style.display = 'inline-block';
        if (isUser) {
            msgSpan.style.background = '#e84393';
            msgSpan.style.color = '#fff';
            msgSpan.style.borderRadius = '8px 8px 0 8px';
        } else {
            msgSpan.style.background = '#333';
            msgSpan.style.borderRadius = '8px 8px 8px 0';
        }
        msgSpan.innerHTML = content; // D√πng innerHTML ƒë·ªÉ render c√°c th·∫ª <i>, <b> n·∫øu c√≥
    
        msgDiv.appendChild(msgSpan);
        geminiMessages.appendChild(msgDiv);
    
        // T·ª± ƒë·ªông cu·ªôn xu·ªëng cu·ªëi
        geminiMessages.scrollTop = geminiMessages.scrollHeight;
    
        // Ch·ªâ th√™m v√†o l·ªãch s·ª≠ n·∫øu ƒë√¢y l√† tin nh·∫Øn m·ªõi
        if (!skipHistoryPush) {
            geminiChatHistory.push({ content, isUser });
        }
    
        return msgDiv; // Tr·∫£ v·ªÅ element ƒë·ªÉ c√≥ th·ªÉ x√≥a (d√πng cho tin nh·∫Øn loading)
    }
    
    
    function sendGeminiMessage() {
        const text = geminiTextarea.value.trim();
        if (!text) return false;
    
        // 1. Hi·ªÉn th·ªã ngay tin nh·∫Øn c·ªßa ng∆∞·ªùi d√πng
        addGeminiMessage(text, true);
        geminiTextarea.value = '';
        geminiTextarea.focus();
    
        // 2. Hi·ªÉn th·ªã tin nh·∫Øn "ƒëang x·ª≠ l√Ω" ƒë·ªÉ ng∆∞·ªùi d√πng bi·∫øt AI ƒëang ho·∫°t ƒë·ªông
        const loadingMessage = addGeminiMessage('<i>ƒêang x·ª≠ l√Ω...</i>', false);
    
        // 3. G·ª≠i y√™u c·∫ßu ƒë·∫øn server
        fetch('geminiPlaylist', {
            method: 'POST',
            headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
            body: 'description=' + encodeURIComponent(text)
        })
        .then(res => {
            if (!res.ok) {
                throw new Error('Network response was not ok');
            }
            return res.json();
        })
        .then(data => {
            // 4. X√≥a tin nh·∫Øn "ƒëang x·ª≠ l√Ω"
            loadingMessage.remove();
            geminiChatHistory.pop(); // X√≥a tin nh·∫Øn "ƒêang x·ª≠ l√Ω..." kh·ªèi l·ªãch s·ª≠
    
            // 5. Hi·ªÉn th·ªã ph·∫£n h·ªìi t·ª´ AI
            if (data.message) {
                addGeminiMessage(data.message, false);
            }
            if (data.info) {
                addGeminiMessage('<i>' + data.info + '</i>', false);
            }
        })
        .catch((err) => {
            // X·ª≠ l√Ω khi c√≥ l·ªói
            if (loadingMessage) {
                loadingMessage.remove();
                geminiChatHistory.pop();
            }
            addGeminiMessage('L·ªói k·∫øt n·ªëi ho·∫∑c c√≥ s·ª± c·ªë t·ª´ m√°y ch·ªß.', false);
        });
    
        return false; // NgƒÉn form submit v√† reload trang
    }
    
    // Kh·ªüi t·∫°o v√† c√°c s·ª± ki·ªán
    if (geminiBtn) {
        geminiBtn.onclick = () => {
            geminiChat.style.display = 'flex';
            geminiBtn.style.display = 'none';
            renderGeminiHistory();
            geminiTextarea.focus();
        };
    }
    
    if (geminiClose) {
        geminiClose.onclick = () => {
            geminiChat.style.display = 'none';
            geminiBtn.style.display = 'flex';
        };
    }
    
    // Th√™m tin nh·∫Øn ch√†o m·ª´ng khi b·∫Øt ƒë·∫ßu
    document.addEventListener('DOMContentLoaded', function() {
        if (geminiChatHistory.length === 0) {
           addGeminiMessage('Ch√†o b·∫°n, t√¥i c√≥ th·ªÉ gi√∫p g√¨ cho b·∫°n?', false);
        }
    });
    </script>